{
	"info": {
		"_postman_id": "fef9b577-bd9f-44fa-9013-e330874e5daa",
		"name": "Admin API E2E",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15734759"
	},
	"item": [
		{
			"name": "User Management",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"const result = pm.response.json().result;\r",
									"\r",
									"pm.test(\"Response matches success format\", function () {\r",
									"    pm.expect(response.status).to.equal(200);\r",
									"    pm.expect(response).to.have.property(\"title\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response title is helpful and accurate\", function () {\r",
									"    pm.expect(response.title.toLowerCase()).to.contain(\"client\");\r",
									"    pm.expect(response.title.toLowerCase()).to.contain(\"registered\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"RegisteredClientId\", pm.variables.replaceIn('{{$guid}}'));\r",
									"pm.collectionVariables.set(\"RegisteredClientSecret\", pm.variables.replaceIn('{{$guid}}'));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ClientId",
									"value": "{{RegisteredClientId}}",
									"type": "text"
								},
								{
									"key": "ClientSecret",
									"value": "{{RegisteredClientSecret}}",
									"type": "text"
								},
								{
									"key": "DisplayName",
									"value": "Postman Test",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/connect/register",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"connect",
								"register"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			}
		},
		{
			"name": "v1",
			"item": [
				{
					"name": "ClaimSets",
					"item": [
						{
							"name": "ClaimSets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const response = pm.response.json();\r",
											"console.log(response);\r",
											"const results = pm.response.json().result;\r",
											"\r",
											"pm.test(\"Response matches success format\", function () {\r",
											"    pm.expect(response.status).to.equal(200);\r",
											"    pm.expect(response).to.have.property(\"title\");\r",
											"    pm.expect(response).to.have.property(\"result\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response result includes claimsets\", function () {\r",
											"    pm.expect(results.length).to.be.greaterThan(0);\r",
											"\r",
											"    const indexOfClaimSet = results.map(\r",
											"        function(claimSet) { return claimSet.id; }\r",
											"    ).indexOf(pm.collectionVariables.get(\"CreatedClaimSetId\"));\r",
											"\r",
											"    const result = results[indexOfClaimSet];\r",
											"    pm.expect(result.name).to.equal(`Test ClaimSet ${pm.collectionVariables.get(\"ClaimSetGUID\")}`);\r",
											"    pm.expect(result.isSystemReserved).to.equal(false);\r",
											"    pm.expect(result.applicationsCount).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/v1/claimsets/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"v1",
										"claimsets",
										""
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{TOKEN}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"if(pm.request.auth && pm.request.auth.type === \"noauth\") {",
					"    return;",
					"}",
					"",
					"let currentToken = pm.collectionVariables.get(\"TOKEN\");",
					"if(currentToken) {",
					"    return;",
					"}",
					"",
					"pm.sendRequest({",
					"    url: `${pm.variables.get(\"API_URL\")}/connect/token`,",
					"    method: 'POST',",
					"    header: {",
					"        'Content-Type': 'application/x-www-form-urlencoded'",
					"    },",
					"    body: {",
					"        mode: 'urlencoded',",
					"        urlencoded: [",
					"            {key: 'client_id', value: pm.variables.get(\"RegisteredClientId\")},",
					"            {key: 'client_secret', value: pm.variables.get(\"RegisteredClientSecret\")},",
					"            {key: 'grant_type', value: \"client_credentials\"},",
					"            {key: 'scope', value: \"edfi_admin_api/full_access\"}",
					"        ]",
					"    }",
					"},",
					"    (err, res) => {",
					"        error = res.json().error",
					"        if(error) {",
					"            throw res.json().error_description",
					"        }",
					"        pm.collectionVariables.set(\"TOKEN\", res.json().access_token)",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "TOKEN",
			"value": ""
		}
	]
}