# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: E2E Tests

on:
  push:
    branches: [ main ]
  schedule:
    - cron:  '0 5 * * 1'
  pull_request:
  workflow_dispatch:

env:
  JIRA_ACCESS_TOKEN: ${{ secrets.JIRA_ACCESS_TOKEN }}
  ADMIN_APP_VERSION: '2.4.0'
  PROJECT_ID: '11900'
  CYCLE_NAME: 'Automation Cycle'
  TASK_NAME: 'Playwright Automation Task'
  FOLDER_NAME: 'Playwright Automation Run'
  RESULTS_FILE: 'playwright-results'

jobs:
  run-e2e-tests:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
      with:
        path: main
    - name: Get ODS Docker
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
      with:
        repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS-Docker
        path: ods-docker
    - name: Copy files to Docker repo
      run: |
        cp -r ./main/Application/EdFi.Ods.AdminApp.E2E.Tests/gh-action-setup/ssl ./ods-docker
        cp -r ./main/Application/EdFi.Ods.AdminApp.E2E.Tests/gh-action-setup/compose-aa-build.yml ./ods-docker/Compose/pgsql
    - uses: nuget/setup-nuget@04b0c2b8d1b97922f67eca497d7cf0bf17b8ffe1 #v1.0.5
    - name: Update Admin App Docker package versions
      run: |
        chmod +x ./main/Application/EdFi.Ods.AdminApp.E2E.Tests/gh-action-setup/set-versions.sh
        ./main/Application/EdFi.Ods.AdminApp.E2E.Tests/gh-action-setup/set-versions.sh
    - name: Run ODS
      run: docker-compose -f ./ods-docker/Compose/pgsql/compose-aa-build.yml --env-file ./main/Application/EdFi.Ods.AdminApp.E2E.Tests/gh-action-setup/.automation.env up -d
    - name: Verify ODS Health
      run: |
        chmod +x ./main/Application/EdFi.Ods.AdminApp.E2E.Tests/gh-action-setup/inspect.sh
        ./main/Application/EdFi.Ods.AdminApp.E2E.Tests/gh-action-setup/inspect.sh
    - name: Setup node
      uses: actions/setup-node@56337c425554a6be30cdef71bf441f15be286854 # v3.1.1
      with:
        node-version: '14'
    - name: Install dependencies
      run: npm ci
      working-directory: main/Application/EdFi.Ods.AdminApp.E2E.Tests
    - name: Install OS dependencies
      run: npx playwright install-deps
      working-directory: main/Application/EdFi.Ods.AdminApp.E2E.Tests
    - name: Set environment
      run: mv .env.example .env
      working-directory: main/Application/EdFi.Ods.AdminApp.E2E.Tests
    - name: Run tests
      run: npm run report
      working-directory: main/Application/EdFi.Ods.AdminApp.E2E.Tests
    - name: Transform results
      if: success() || failure()
      run: python ./resultparser.py
      working-directory: main/Application/EdFi.Ods.AdminApp.E2E.Tests
    - name: Upload results
      uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # v3.0.0
      with:
        name: ${{ env.RESULTS_FILE }}
        path: main/Application/EdFi.Ods.AdminApp.E2E.Tests/reports/playwright-results.xml
    - name: Upload execution traces
      if: failure()
      uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # v3.0.0
      with:
        name: playwright-execution-traces
        path: main/Application/EdFi.Ods.AdminApp.E2E.Tests/traces
    - name: Clean ODS
      if: always()
      run: ./shared-instance-env-clean.ps1
      shell: pwsh
      working-directory: ods-docker

  reports:
    needs: run-e2e-tests

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh

    steps:
    - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
    - name: Get Artifact
      uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 #v3.0.0
      with:
        name: ${{ env.RESULTS_FILE }}
    - name: Generate report
      uses: dorny/test-reporter@0d00bb14cb0cc2c9b8985df6e81dd333188224e1 #v1.5.0
      with:
        name: Playwright Tests
        path: '${{ env.RESULTS_FILE }}.xml'
        reporter: java-junit
    - name: Send report to Zephyr
      if: ${{ github.ref == 'refs/heads/main' }}
      run: |
        $parameters = @{
            cycleName = '${{ env.CYCLE_NAME }}'
            taskName = '${{ env.TASK_NAME }}'
            folderName = '${{ env.FOLDER_NAME }}'
        }
        .\eng\send-test-results.ps1 -PersonalAccessToken ${{ env.JIRA_ACCESS_TOKEN }} -ProjectId ${{ env.PROJECT_ID }} -AdminAppVersion '${{ env.ADMIN_APP_VERSION }}' -ResultsFilePath '${{ env.RESULTS_FILE }}/${{ env.RESULTS_FILE }}.xml' -ConfigParams $parameters
